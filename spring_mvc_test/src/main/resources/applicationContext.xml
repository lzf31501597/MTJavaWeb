<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--组件扫描-->
    <context:component-scan base-package="com.itheima"/>

    <!--加载properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--配置数据库信息-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
     </bean>

    <!--配置SqlSessionFactoryBean ，作用将SqlSessionFactoryBean 存储到srping容器-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--MapperScannerConfigurer作用扫描指定的包，产生Mapper对象存储到Spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itheima.mapper"/>
    </bean>

    <!--配置平台事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置Spring提供好的Advice-->
    <!--<bean id="myAdvice" class="xxxxx"/>-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 配置不同方法的事务属性
                name：方法名称  *代表通配符
                各种操作addUser，addAccount，addOrders ==> add*
                ioslation: 事务的隔离级别，解决事务并发问题
                timeout: 超时时间 默认是-1，单位是秒
                read-only：是否只读,查询操作设置为只读，其他操作默认
                propagation：事务的传播行为，解决业务方法调用业务方法（实物嵌套问题）
                rollback-for:一组异常类，遇到时回滚
                no-rollback-for: 一组异常类，遇到时不回滚。默认为{}
            -->
            <tx:method name="*"/>
            <!--<tx:method name="transferMoney" isolation="READ_COMMITTED" timeout="3" read-only="false" propagation="REQUIRED"/>
            <tx:method name="update*"/>
            <tx:method name="add*"/>
            <tx:method name="select*"/>
            <tx:method name="delete*"/>
            <tx:method name="registAccount"/>-->
        </tx:attributes>
    </tx:advice>

    <!--AOP事务增强-->
    <aop:config>
        <!--配置切点表达式-->
        <aop:pointcut id="txPointcut" expression="execution(* com.itheima.service.impl.*.*(..))"/>
        <!--配置切入关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
</beans>